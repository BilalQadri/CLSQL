<?xml version='1.0' ?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [
<!ENTITY % myents SYSTEM "entities.inc">
%myents;
]>

<!-- Object Oriented Data Manipulation Language --> 
<reference id="ref-oodml"> 
  <title>Object Oriented Data Manipulation Language (OODML)</title> 
    <partintro>
    <para>
      <!-- introduction --> 
    </para>
  </partintro>

  <refentry id="db-auto-sync">
    <refnamediv>
      <refname>*DB-AUTO-SYNC*</refname>
      <refpurpose>Enables SQL storage during Lisp object creation.</refpurpose>
      <refclass>Variable</refclass>
    </refnamediv>
    <refsect1>
      <title>Value Type</title>
      <para>
	Boolean
      </para> 
    </refsect1>
    <refsect1>
      <title>Initial Value</title>
      <para>&nil;</para>
    </refsect1>
    <refsect1>
      <title>Description</title>
      When this variable is &t; an instance is stored in the SQL database when the instance is created
      by <function>make-instance</function>. When this variable is &nil;, which is the default value, &clsql;
      behaves like &commonsql;: instances of view classes are stored to the SQL database only when
      <link linkend="update-record-from-slots"><function>update-record-from-slots</function></link>
      is called.
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
	(let ((instance (make-instance 'foo)))
	  (update-record-from-slots instance))

	;; is equivalent to

	(let ((*db-auto-sync* t))
	  (make-instance 'foo))
      </screen>
    </refsect1>
    <refsect1>
      <title>Affected By</title>
      <para>None.</para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <simplelist>
        <member><link linkend="update-record-from-slots"><function>update-record-from-slots</function></link></member>
      </simplelist>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>None.</para>
    </refsect1>
  </refentry>

  <refentry id="default-update-objects-max-len">
    <refnamediv>
      <refname>*DEFAULT-UPDATE-OBJECTS-MAX-LEN*</refname>
      <refpurpose>The default maximum number of objects each query to perform a join</refpurpose>
      <refclass>Variable</refclass>
    </refnamediv>
    <refsect1>
      <title>Value Type</title>
      <para>
	(or null integer)
      </para> 
    </refsect1>
    <refsect1>
      <title>Initial Value</title>
      <para>&nil;</para>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>
	This special variable provides the default value for the
	<parameter>max-len</parameter> argument of the function <link
	linkend="update-object-joins"><function>update-object-joins</function></link>.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
	(setq *default-update-objects-max-len* 100)
      </screen>
    </refsect1>
    <refsect1>
      <title>Affected By</title>
      <para>None.</para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>None.</para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>None.</para>
    </refsect1>
  </refentry>

  <refentry id="delete-instance-records">
    <refnamediv>
      <refname>DELETE-INSTANCE-RECORDS</refname>
      <refpurpose>Delete SQL records represented by a view class object</refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function>(delete-instance-records object)</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Deletes the records represented by OBJECT in the
      appropriate table of the database associated with OBJECT. If
      OBJECT is not yet associated with a database, an error is
      signalled.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
	* (def-view-class tab () ((a :type integer :db-kind :key) (b :type string)))
        #&lt;clsql-sys::db-standard-class tab> 
	* (defvar obj (let ((*db-auto-sync* t))
	                (make-instance 'tab :a 5 :b "the string")))
	* (start-sql-recording :type :both)
        * (delete-instance-records obj) 		
	    
        
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
	Deletes data from the SQL database.
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
	Permissions granted by the SQL database to the user in the database connection.
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
	An exception may be signaled if the database connection user does not have
	sufficient privileges to modify the database.
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
	<simplelist>
	  <member><link linkend="update-records"><function>update-records</function></link></member>
	  <member><link linkend="update-records-from-instance"><function>update-records-from-instance</function></link></member>
	</simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
	Instances are referenced in the database by values stored in the key slots. If
	<function>delete-records-from-instance</function> is called with an instance of a class that does
	not contain any keys, then all records in that table will be deleted. 
      </para>
    </refsect1>
  </refentry> 

  <refentry id="instance-refreshed">
    <refnamediv>
      <refname>INSTANCE-REFRESHED</refname>
      <refpurpose>Hook to call on object refresh</refpurpose>
      <refclass>Generic function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function>(instance-refreshed object)</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <varlistentry>
          <term><parameter>object</parameter></term>
          <listitem>
            <para>
	      The view class object which is being refreshed.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Provides a hook which is called within an object
      oriented call to SELECT with a non-nil value of REFRESH when
      the View Class instance OBJECT has been updated from the
      database. A method specialised on STANDARD-DB-OBJECT is
      provided which has no effects. Methods specialised on
      particular View Classes can be used to specify any operations
      that need to be made on View Classes instances which have been
      updated in calls to SELECT.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
	None.
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry> 

  <refentry id="update-instance-from-records">
    <refnamediv>
      <refname>UPDATE-INSTANCE-FROM-RECORDS</refname>
      <refpurpose>Update slot values from database.</refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function>(update-instance-from-records object &amp;key database)</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Updates the slot values of the View Class instance
      OBJECT using the attribute values of the appropriate table of
      DATABASE which defaults to the database associated with OBJECT
      or, if OBJECT is not associated with a database,
      *DEFAULT-DATABASE*.  Join slots are updated but instances of
      the class on which the join is made are not updated.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry> 

  <refentry id="update-objects-joins">
    <refnamediv>
      <refname>UPDATE-OBJECTS-JOINS</refname>
      <refpurpose>Updates joined slots of objects</refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function>(update-objects-joins objects &amp;key (slots t) (force-p t) class-name (max-len *default-update-objects-max-len*))</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Updates from the records of the appropriate
      database tables the join slots specified by SLOTS in
      the supplied list of View Class instances OBJECTS.
      SLOTS is t by default which means that all join slots
      with :retrieval :immediate are updated. CLASS-NAME is
      used to specify the View Class of all instance in
      OBJECTS and default to nil which means that the class
      of the first instance in OBJECTS is used. FORCE-P is t
      by default which means that all join slots are updated
      whereas a value of nil means that only unbound join
      slots are updated. MAX-LEN defaults to
      *DEFAULT-UPDATE-OBJECTS-MAX-LEN* and when non-nil
      specifies that UPDATE-OBJECT-JOINS may issue multiple
      database queries with a maximum of MAX-LEN instances
      updated in each query.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="update-record-from-slot">
    <refnamediv>
      <refname>UPDATE-RECORD-FROM-SLOT</refname>
      <refpurpose>Updates database from slot value</refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function>(update-record-from-slot object slot &amp;key database)</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Updates the value stored in the column represented by
      the slot, specified by the CLOS slot name SLOT, of View Class
      instance OBJECT. DATABASE defaults to *DEFAULT-DATABASE* and
      specifies the database in which the update is made only if
      OBJECT is not associated with a database. In this case, a
      record is created in DATABASE and the attribute represented by
      SLOT is initialised from the value of the supplied slots with
      other attributes having default values. Furthermore, OBJECT
      becomes associated with DATABASE.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry> 

  <refentry id="update-record-from-slots">
    <refnamediv>
      <refname>UPDATE-RECORD-FROM-SLOTS</refname>
      <refpurpose>Update database from slots of view class object</refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function>(update-record-from-slots object slots &amp;key database)</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Updates the values stored in the columns represented by
      the slots, specified by the CLOS slot names SLOTS, of View
      Class instance OBJECT. DATABASE defaults to *DEFAULT-DATABASE*
      and specifies the database in which the update is made only if
      OBJECT is not associated with a database. In this case, a
      record is created in the appropriate table of DATABASE and the
      attributes represented by SLOTS are initialised from the
      values of the supplied slots with other attributes having
      default values. Furthermore, OBJECT becomes associated with
      DATABASE.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry> 


  <refentry id="update-records-from-instance">
    <refnamediv>
      <refname>UPDATE-RECORDS-FROM-INSTANCE</refname>
      <refpurpose>Update database from view class object.</refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function>(update-records-from-instance object &amp;key database)</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Using an instance of a View Class, OBJECT, update the
      table that stores its instance data. DATABASE defaults to
      *DEFAULT-DATABASE* and specifies the database in which the
      update is made only if OBJECT is not associated with a
      database. In this case, a record is created in the appropriate
      table of DATABASE using values from the slot values of OBJECT,
      and OBJECT becomes associated with DATABASE.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry> 

  <refentry id="update-slot-from-record">
    <refnamediv>
      <refname>UPDATE-SLOT-FROM-RECORD</refname>
      <refpurpose>Update objects slot from database.</refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function>(update-slot-from-record object slot &amp;key database)</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Updates the slot value, specified by the CLOS slot name
      SLOT, of the View Class instance OBJECT using the attribute
      values of the appropriate table of DATABASE which defaults to
      the database associated with OBJECT or, if OBJECT is not
      associated with a database, *DEFAULT-DATABASE*.  Join slots
      are updated but instances of the class on which the join is
      made are not updated.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry> 

</reference> 
