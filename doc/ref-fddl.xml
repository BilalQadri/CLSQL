<?xml version='1.0' ?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [
<!ENTITY % myents SYSTEM "entities.inc">
%myents;
]>

<!-- Functional Data Definition Language --> 
<reference id="ref-fddl"> 
  <title>Functional Data Definition Language (FDDL)</title> 
    <partintro>
    <para>
      <!-- introduction --> 
    </para>
  </partintro>

  <refentry id="create-table">
    <refnamediv>
      <refname>CREATE-TABLE</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (CREATE-TABLE NAME DESCRIPTION &amp;KEY (DATABASE *DEFAULT-DATABASE*) (CONSTRAINTS NIL) (TRANSACTIONS T)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Creates a table called NAME, which may be a string,
      symbol or SQL table identifier, in DATABASE which defaults to
      *DEFAULT-DATABASE*. DESCRIPTION is a list whose elements are
      lists containing the attribute names, types, and other
      constraints such as not-null or primary-key for each column in
      the table.  CONSTRAINTS is a string representing an SQL table
      constraint expression or a list of such strings. With MySQL
      databases, if TRANSACTIONS is t an InnoDB table is created
      which supports transactions.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="describe-table">
    <refnamediv>
      <refname>DESCRIBE-TABLE</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (DESCRIBE-TABLE TABLE &amp;KEY DATABASE) [generic]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Describes a table, returns a list of
      name/type for columns in table
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry> 

  <refentry id="drop-table">
    <refnamediv>
      <refname>DROP-TABLE</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (DROP-TABLE NAME &amp;KEY (IF-DOES-NOT-EXIST :ERROR) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Drops the table called NAME from DATABASE which defaults
      to *DEFAULT-DATABASE*. If the table does not exist and
      IF-DOES-NOT-EXIST is :ignore then DROP-TABLE returns nil whereas
      an error is signalled if IF-DOES-NOT-EXIST is :error.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="list-tables">
    <refnamediv>
      <refname>LIST-TABLES</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (LIST-TABLES &amp;KEY (OWNER NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Returns a list of strings representing table names in DATABASE
      which defaults to *DEFAULT-DATABASE*. OWNER is nil by default
      which means that only tables owned by users are listed. If OWNER
      is a string denoting a user name, only tables owned by OWNER are
      listed. If OWNER is :all then all tables are listed.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="table-exists-p">
    <refnamediv>
      <refname>TABLE-EXISTS-P</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (TABLE-EXISTS-P NAME &amp;KEY (OWNER NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Tests for the existence of an SQL table called NAME in
      DATABASE which defaults to *DEFAULT-DATABASE*. OWNER is nil by
      default which means that only tables owned by users are
      examined. If OWNER is a string denoting a user name, only
      tables owned by OWNER are examined. If OWNER is :all then all
      tables are examined.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="create-view">
    <refnamediv>
      <refname>CREATE-VIEW</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (CREATE-VIEW NAME &amp;KEY AS COLUMN-LIST (WITH-CHECK-OPTION NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Creates a view called NAME in DATABASE which defaults to
      *DEFAULT-DATABASE*. The view is created using the query AS and
      the columns of the view may be specified using the COLUMN-LIST
      parameter. The WITH-CHECK-OPTION is nil by default but if it
      has a non-nil value, then all insert/update commands on the
      view are checked to ensure that the new data satisfy the query
      AS.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="drop-view">
    <refnamediv>
      <refname>DROP-VIEW</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (DROP-VIEW NAME &amp;KEY (IF-DOES-NOT-EXIST :ERROR) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Drops the view called NAME from DATABASE
      which defaults to *DEFAULT-DATABASE*. If the view does
      not exist and IF-DOES-NOT-EXIST is :ignore then
      DROP-VIEW returns nil whereas an error is signalled if
      IF-DOES-NOT-EXIST is :error.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="list-views">
    <refnamediv>
      <refname>LIST-VIEWS</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (LIST-VIEWS &amp;KEY (OWNER NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Returns a list of strings representing view
      names in DATABASE which defaults to
      *DEFAULT-DATABASE*. OWNER is nil by default which
      means that only views owned by users are listed. If
      OWNER is a string denoting a user name, only views
      owned by OWNER are listed. If OWNER is :all then all
      views are listed.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="view-exists-p">
    <refnamediv>
      <refname>VIEW-EXISTS-P</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (VIEW-EXISTS-P NAME &amp;KEY (OWNER NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Tests for the existence of an SQL view called NAME in
      DATABASE which defaults to *DEFAULT-DATABASE*. OWNER is nil by
      default which means that only views owned by users are
      examined. If OWNER is a string denoting a user name, only
      views owned by OWNER are examined. If OWNER is :all then all
      views are examined.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="create-index">
    <refnamediv>
      <refname>CREATE-INDEX</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (CREATE-INDEX NAME &amp;KEY ON (UNIQUE NIL) ATTRIBUTES (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Creates an index called NAME on the table specified by
      ON in DATABASE which default to *DEFAULT-DATABASE*. The table
      attributes to use in constructing the index NAME are specified
      by ATTRIBUTES. The UNIQUE argument is nil by default but if it
      has a non-nil value then the indexed attributes must have
      unique values.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="drop-index">
    <refnamediv>
      <refname>DROP-INDEX</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (DROP-INDEX NAME &amp;KEY (IF-DOES-NOT-EXIST :ERROR) (ON NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Drops the index called NAME in DATABASE which
      defaults to *DEFAULT-DATABASE*. If the index does not
      exist and IF-DOES-NOT-EXIST is :ignore then DROP-INDEX
      returns nil whereas an error is signalled if
      IF-DOES-NOT-EXIST is :error. The argument ON allows
      the optional specification of a table to drop the
      index from.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="index-exists-p">
    <refnamediv>
      <refname>INDEX-EXISTS-P</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (INDEX-EXISTS-P NAME &amp;KEY (OWNER NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Tests for the existence of an SQL index
      called NAME in DATABASE which defaults to
      *DEFAULT-DATABASE*. OWNER is nil by default which
      means that only indexes owned by users are
      examined. If OWNER is a string denoting a user name,
      only indexes owned by OWNER are examined. If OWNER is
      :all then all indexes are examined.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="list-indexes">
    <refnamediv>
      <refname>LIST-INDEXES</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (LIST-INDEXES &amp;KEY (OWNER NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Returns a list of strings representing index
      names in DATABASE which defaults to
      *DEFAULT-DATABASE*. OWNER is nil by default which
      means that only indexes owned by users are listed. If
      OWNER is a string denoting a user name, only indexes
      owned by OWNER are listed. If OWNER is :all then all
      indexes are listed.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="list-table-indexes">
    <refnamediv>
      <refname>LIST-TABLE-INDEXES</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (LIST-TABLE-INDEXES TABLE &amp;KEY (OWNER NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Returns a list of strings representing index
      names on the table specified by TABLE in DATABASE
      which defaults to *DEFAULT-DATABASE*. OWNER is nil by
      default which means that only indexes owned by users
      are listed. If OWNER is a string denoting a user name,
      only indexes owned by OWNER are listed. If OWNER is
      :all then all indexes are listed.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>


  <refentry id="attribute-type">
    <refnamediv>
      <refname>ATTRIBUTE-TYPE</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (ATTRIBUTE-TYPE ATTRIBUTE TABLE &amp;KEY (OWNER NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Returns a string representing the field type of the
      supplied attribute ATTRIBUTE in the table specified by TABLE
      in DATABASE which defaults to *DEFAULT-DATABASE*. OWNER is nil
      by default which means that the attribute specified by
      ATTRIBUTE, if it exists, must be user owned else nil is
      returned. If OWNER is a string denoting a user name, the
      attribute, if it exists, must be owned by OWNER else nil is
      returned, whereas if OWNER is :all then the attribute, if it
      exists, will be returned regardless of its owner.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="list-attribute-types">
    <refnamediv>
      <refname>LIST-ATTRIBUTE-TYPES</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (LIST-ATTRIBUTE-TYPES TABLE &amp;KEY (OWNER NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Returns a list containing information about
      the SQL types of each of the attributes in the table
      specified by TABLE in DATABASE which has a default
      value of *DEFAULT-DATABASE*. OWNER is nil by default
      which means that only attributes owned by users are
      listed. If OWNER is a string denoting a user name,
      only attributes owned by OWNER are listed. If OWNER is
      :all then all attributes are listed. The elements of
      the returned list are lists where the first element is
      the name of the attribute, the second element is its
      SQL type, the third is the type precision, the fourth
      is the scale of the attribute and the fifth is 1 if
      the attribute accepts null values and otherwise
      0.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="list-attributes">
    <refnamediv>
      <refname>LIST-ATTRIBUTES</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (LIST-ATTRIBUTES NAME &amp;KEY (OWNER NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Returns a list of strings representing the
      attributes of table NAME in DATABASE which defaults to
      *DEFAULT-DATABASE*. OWNER is nil by default which
      means that only attributes owned by users are
      listed. If OWNER is a string denoting a user name,
      only attributes owned by OWNER are listed. If OWNER is
      :all then all attributes are listed.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>


  <refentry id="create-sequence">
    <refnamediv>
      <refname>CREATE-SEQUENCE</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (CREATE-SEQUENCE NAME &amp;KEY (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Creates a sequence called NAME in DATABASE which
      defaults to *DEFAULT-DATABASE*.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="drop-sequence">
    <refnamediv>
      <refname>DROP-SEQUENCE</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (DROP-SEQUENCE NAME &amp;KEY (IF-DOES-NOT-EXIST :ERROR) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Drops the sequence called NAME from DATABASE
      which defaults to *DEFAULT-DATABASE*. If the sequence
      does not exist and IF-DOES-NOT-EXIST is :ignore then
      DROP-SEQUENCE returns nil whereas an error is
      signalled if IF-DOES-NOT-EXIST is :error.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="list-sequences">
    <refnamediv>
      <refname>LIST-SEQUENCES</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (LIST-SEQUENCES &amp;KEY (OWNER NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Returns a list of strings representing
      sequence names in DATABASE which defaults to
      *DEFAULT-DATABASE*. OWNER is nil by default which
      means that only sequences owned by users are
      listed. If OWNER is a string denoting a user name,
      only sequences owned by OWNER are listed. If OWNER is
      :all then all sequences are listed.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="sequence-exists-p">
    <refnamediv>
      <refname>SEQUENCE-EXISTS-P</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (SEQUENCE-EXISTS-P NAME &amp;KEY (OWNER NIL) (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Tests for the existence of an SQL sequence called NAME in
      DATABASE which defaults to *DEFAULT-DATABASE*. OWNER is nil by
      default which means that only sequences owned by users are
      examined. If OWNER is a string denoting a user name, only
      sequences owned by OWNER are examined. If OWNER is :all then all
      sequences are examined.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="sequence-last">
    <refnamediv>
      <refname>SEQUENCE-LAST</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (SEQUENCE-LAST NAME &amp;KEY (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Return the last value of the sequence called NAME in DATABASE
      which defaults to *DEFAULT-DATABASE*.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="sequence-next">
    <refnamediv>
      <refname>SEQUENCE-NEXT</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (SEQUENCE-NEXT NAME &amp;KEY (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Return the next value in the sequence called NAME in DATABASE
      which defaults to *DEFAULT-DATABASE*.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

  <refentry id="set-sequence-position">
    <refnamediv>
      <refname>SET-SEQUENCE-POSITION</refname>
      <refpurpose><!-- purpose --></refpurpose>
      <refclass>Function</refclass>
    </refnamediv>
    <refsect1>
      <title>Syntax</title>
      <synopsis>
      <function> (SET-SEQUENCE-POSITION NAME POSITION &amp;KEY (DATABASE *DEFAULT-DATABASE*)) [function]</function> => <returnvalue><!-- result --></returnvalue></synopsis>
    </refsect1>
    <refsect1>
      <title>Arguments and Values</title>
      <variablelist>
        <!-- arguments and values --> 
      </variablelist>
    </refsect1>
    <refsect1>
      <title>Description</title>
      <para>Explicitly set the the position of the sequence called NAME in
      DATABASE, which defaults to *DEFAULT-DATABSE*, to POSITION.
      </para>
    </refsect1>
    <refsect1>
      <title>Examples</title>
      <screen>
        <!-- examples -->
      </screen>
    </refsect1>
    <refsect1>
      <title>Side Effects</title>
      <para>
        <!-- side effects --> 
      </para>
    </refsect1>
    <refsect1>
      <title>Affected by</title>
      <para>
        <simplelist>
          <!-- affected by --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Exceptional Situations</title>
      <para>
        <!-- execeptional situations -->
      </para>
    </refsect1>
    <refsect1>
      <title>See Also</title>
      <para>
        <simplelist>
          <!-- see also --> 
        </simplelist>
      </para>
    </refsect1>
    <refsect1>
      <title>Notes</title>
      <para>
        <!-- notes --> 
      </para>
    </refsect1>
  </refentry>

</reference> 
